image: docker:19.03
services:
  - name: docker:19.03-dind
    command: ["--experimental"]

variables:
  DOCKER_HOST: tcp://docker:2375
  #DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1
  DOCKER_CLI_EXPERIMENTAL: enabled
  BUILDX_URL: https://github.com/docker/buildx/releases/download/v0.4.1/buildx-v0.4.1.linux-amd64

before_script:
  - mkdir -p $HOME/.docker/cli-plugins/
  - wget -O $HOME/.docker/cli-plugins/docker-buildx $BUILDX_URL
  - chmod a+x $HOME/.docker/cli-plugins/docker-buildx
  - docker buildx version
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - "echo -e '{\n  \"experimental\": \"enabled\"\n}' | tee $HOME/.docker/config.json"
  - docker buildx create --use --driver docker-container --name pg --platform=linux/amd64,linux/386,linux/arm/v7,linux/arm64
  - docker buildx inspect --bootstrap pg
  - docker buildx ls
  - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin

stages:
  - build
  - push

build:
  stage: build
  script:
    # https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    - sh docker-build.sh
    - docker images

push_to_dockerhub:
 stage: push
 only:
   - master
 script:
   - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
   - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
   # put the build commands in this script instead of messing with the yaml nesting mess >
   # https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html
   - sh docker-build.sh
   - docker images | grep "$DOCKERHUB_USER/$DOCKERHUB_PROJECT" | awk '{print $1":"$2}' >> /tmp/images
   - while read -r var;do docker push "${var}";done < /tmp/images
